[gd_scene load_steps=8 format=2]

[ext_resource path="res://scenes/vboxC/vboxC.tscn" type="PackedScene" id=1]
[ext_resource path="res://mainTheme.tres" type="Theme" id=2]
[ext_resource path="res://scenes/vboxRootL.tscn" type="PackedScene" id=3]
[ext_resource path="res://scenes/vboxRootR.tscn" type="PackedScene" id=4]
[ext_resource path="res://resource/BG_Stats_N1.png" type="Texture" id=5]

[sub_resource type="GDScript" id=1]
script/source = "extends TextureRect
var defaultRectPosition:=Vector2()
const speed:=0.5
func _ready():
	defaultRectPosition=self.rect_position
	set_process(true)
func _process(delta):
	self.rect_position+=Vector2(speed,speed)
	if is_equal_approx(self.rect_position.x,0):self.rect_position=defaultRectPosition
	self.texture=global.getBgTexture()
"

[sub_resource type="GDScript" id=2]
script/source = "extends MarginContainer
var deleteMe=Node2D.new()
var newContainer=Node2D.new()
var vboxLeft=preload(\"res://scenes/vboxRootL.tscn\")
var vboxRight=preload(\"res://scenes/vboxRootR.tscn\")
var state=\"centerScreen\"
func _ready():
	$twnEnter.connect(\"tween_completed\",self,\"checkForDeletion\")
	set_process(true)
func _process(delta):
	if state==\"centerScreen\":
		if Input.is_action_just_pressed(\"ui_left\") and global.isGameCompact():
			state=\"leftScreen\"
			newContainer=instantiateScreen(vboxLeft)
			tweenToInside(newContainer,-1)
			add_child(newContainer)
		if Input.is_action_just_pressed(\"ui_right\") and global.isGameCompact():
			state=\"rightScreen\"
			newContainer=instantiateScreen(vboxRight)
			tweenToInside(newContainer,1)
			add_child(newContainer)
	elif state==\"leftScreen\":
		if Input.is_action_just_pressed(\"ui_left\") and global.isGameCompact():
			self.state=\"centerScreen\"
			tweenToOutside(newContainer,-1)
	elif state==\"rightScreen\":
		if Input.is_action_just_pressed(\"ui_right\") and global.isGameCompact():
			self.state=\"centerScreen\"
			tweenToOutside(newContainer,1)
func instantiateScreen(scene):
	var i=scene.instance()
	i.rect_global_position.x=-i.rect_size.x
	i.visible=true
	i.modulate.a=0
	i.updateable=false
	return i
func tweenToInside(node,side):
	var startPos=side*node.rect_size.x if side<0 else side*node.rect_size.x+OS.window_size.x
	$twnEnter.interpolate_property(node,\"rect_global_position:x\",startPos,0,0.5,Tween.TRANS_QUAD,Tween.EASE_OUT)
	$twnEnter.interpolate_property(node,\"modulate:a\",0,1,0.2,Tween.TRANS_QUINT,Tween.EASE_OUT)
	$twnEnter.start()
func tweenToOutside(node,side):
	var endPos=side*node.rect_size.x if side<0 else side*node.rect_size.x+OS.window_size.x
	$twnEnter.interpolate_property(node,\"rect_global_position:x\",0,endPos,0.5,Tween.TRANS_QUAD,Tween.EASE_IN)
	$twnEnter.start()
func checkForDeletion(h,m):
	if self.state==\"centerScreen\":
		newContainer.queue_free()
"

[node name="root" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -1.94806
margin_top = -1.94803
margin_right = -1.94806
margin_bottom = -1.94803
theme = ExtResource( 2 )
__meta__ = {
"_edit_use_anchors_": false,
"_edit_vertical_guides_": [ 1024.14, 512.176 ]
}

[node name="BG" type="TextureRect" parent="."]
modulate = Color( 0.239216, 0.239216, 0.239216, 1 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -96.0
margin_top = -96.0
margin_right = -816.0
margin_bottom = -498.0
rect_scale = Vector2( 4, 4 )
texture = ExtResource( 5 )
expand = true
stretch_mode = 2
script = SubResource( 1 )
__meta__ = {
"_edit_use_anchors_": false,
"_editor_description_": ""
}

[node name="marginContainer" type="MarginContainer" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
custom_constants/margin_right = 18
custom_constants/margin_top = 9
custom_constants/margin_left = 18
custom_constants/margin_bottom = 9
script = SubResource( 2 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="hbox" type="HBoxContainer" parent="marginContainer"]
margin_left = 18.0
margin_top = 9.0
margin_right = 1006.0
margin_bottom = 603.0
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="vboxRootL" parent="marginContainer/hbox" instance=ExtResource( 3 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 316.0
margin_bottom = 594.0

[node name="vsep0" type="VSeparator" parent="marginContainer/hbox"]
modulate = Color( 1, 1, 1, 0 )
margin_left = 320.0
margin_right = 328.0
margin_bottom = 594.0
custom_constants/separation = 8

[node name="vboxC" parent="marginContainer/hbox" instance=ExtResource( 1 )]
margin_bottom = 594.0

[node name="vsep1" type="VSeparator" parent="marginContainer/hbox"]
modulate = Color( 1, 1, 1, 0 )
margin_left = 652.0
margin_right = 660.0
margin_bottom = 594.0
custom_constants/separation = 8

[node name="vboxRootR" parent="marginContainer/hbox" instance=ExtResource( 4 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 664.0
margin_right = 987.0
margin_bottom = 594.0
rect_min_size = Vector2( 323, 0 )

[node name="twnEnter" type="Tween" parent="marginContainer"]
